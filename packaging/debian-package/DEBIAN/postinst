#!/bin/bash

# Post-installation script for PI USB Data Safegate

set -e

# Configuration
APP_DIR="/usr/share/pi-usb-safegate"
CONFIG_DIR="/etc/pi-usb-safegate"
LOG_DIR="/var/log/pi-usb-safegate"

case "$1" in
    configure)
        echo "Configuring PI USB Data Safegate..."
        
        # Create directories with proper permissions
        mkdir -p "$CONFIG_DIR"
        mkdir -p "$LOG_DIR"
        
        # Set proper permissions
        chown root:root "$CONFIG_DIR"
        chmod 755 "$CONFIG_DIR"
        
        chown root:root "$LOG_DIR"
        chmod 755 "$LOG_DIR"
        
        # Create default config if it doesn't exist
        if [ ! -f "$CONFIG_DIR/config.ini" ]; then
            cp "$CONFIG_DIR/config.ini.template" "$CONFIG_DIR/config.ini"
            chown root:root "$CONFIG_DIR/config.ini"
            chmod 640 "$CONFIG_DIR/config.ini"
        fi
        
        # Install Python dependencies
        echo "Installing Python dependencies..."
        pip3 install requests configparser pathlib || true
        
        # Update ClamAV database
        echo "Updating ClamAV database (this may take a while)..."
        freshclam || echo "ClamAV database update failed, but continuing..."
        
        # Enable and start ClamAV services
        if command -v systemctl >/dev/null 2>&1; then
            systemctl enable clamav-freshclam || true
            systemctl enable clamav-daemon || true
            systemctl start clamav-freshclam || true
            systemctl start clamav-daemon || true
        fi
        
        # Reload udev rules
        if command -v udevadm >/dev/null 2>&1; then
            udevadm control --reload-rules || true
        fi
        
        # Update desktop database
        if command -v update-desktop-database >/dev/null 2>&1; then
            update-desktop-database /usr/share/applications || true
        fi
        
        echo "PI USB Data Safegate installed successfully!"
        echo ""
        echo "Next steps:"
        echo "1. Run configuration setup: sudo pi-usb-safegate-setup"
        echo "2. Start the application: sudo pi-usb-safegate"
        echo "3. Or find it in your applications menu"
        echo ""
        echo "Configuration file: $CONFIG_DIR/config.ini"
        echo "Log files: $LOG_DIR/"
        echo ""
        echo "Important: This application requires root privileges to access USB devices."
        ;;
        
    abort-upgrade|abort-remove|abort-deconfigure)
        ;;
        
    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
        ;;
esac

exit 0